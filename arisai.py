from operator import mul
from functools import reduce
from Crypto.Util.number import long_to_bytes

# N est facilement décomposé en produit de facteurs premiers, par exemple avec primefac...
s0 = '10433911 14922409 9884603 9584371 11909747 11028001 12705883 11559637 8525711 14013617 16405027 8786017 8824679 9444839 14880347 8441831 9163981 15489707 13371181 12109277 8633423 11084419 11152859 9142547 9696719 16312763 13366687 16497373 9075889 15181499 10228861 15501071 11462177 10773781 10731407 9095939 16755269 9223867 9016037 11928173 10605817 8850601 10650929 9905167 12621067 10114409 11543971 12274813 12599803 10000759 12387329 9663629 16594681 10213001 9126197 8476817 14466281 9748049 9720223 9883469 13202297 13561657 10441523 13870601 9265309 12339689 13587683 12350357 9801269 15947639 12652597 13059269 13655797 16225283 14693927 10918459 15103373 10732091 9853043 15020413 12407609 9041551 15792169 13076249 8913481 16432721 13534007 14435203 10699517 11230451 13823059 14465153 16175597 13128433 9838117 14217041 10667479 10523977 9836483 11625619 9873373 10849837 12808151 11156681 14311291 14588369 14339863 10893173 11768401 10235447 15470893 8452019 15209617 13227367 15232961 12407959 12089663 9405353 15299831 14738869 13799299 8473027 10428001 11925691 11915809 14624459 11633267 10514083 11113789 15689647 9253319 16177433 16679137 11990089 15748631 14797501 12515033 15689981 14633851 12804707 14103413 10214591 13997617 14340289 10064897 15005579 11661121 10122389 8796721 13673927 9368759 12358079 9828727 10754837 16177433 13653811 15793247 12010259 11847721 15459343 16032721 11073793 13669967 12550357 11470343 16071229 9300803 15707143 16212913 11945093 14713939 15185399 14910199 9357883 10344643 16657153 12231853 9989579 9770723 14482381 11519971 14423561 9172531 10861127 10438013 14650763 16738913 16643707 12824027 12967831 13430423 11369903 16080319 14982181 13170671 8608673 9569057 12240667 8725153 8450987 11057621 15682181 9298747 10943417 16336267 16632713 14549063 10476001 16629163 9277921 13865617 15707093 9196001 8933437 13328803 15922301 14086979 8523661 16593167 13424921 13415921 11369903 13755149 14044937 14377679 8725153 16254883 15798877 13568981 14475521 12932669 16198717 16359283 15475193 9552029 13625263 11239903 14046449 14548939 16199101 11049739 11504419 13046717 15365261 14535811 10944433 15441739 12319117 16701907 14407667 13417357 8641453 16045049 13566431 14162843 15031937'
primes = [int(p) for p in s0.split(' ')]
N = reduce(mul, primes)  # OK
primes1 = list(set(primes))
alpha = [primes.count(p) for p in primes1]
phi = 1
for (p, a) in zip(primes1, alpha):
    phi *= p**a - p**(a - 1)
e = 65537
d = pow(e, -1, phi)
ct = 268829805459609475588440899873097740407996768854076329496002425282199615879909227647380967635165606878898541606457683227761652305836586321855100255485305118037701500609605019785162541750877335573032359895573772603246111506991979320486028250721513277767642375361127152574528694298160906073442383962020636918610527024050576972769852306021296823499884948279413653216802756618690182635446020844210831886652986287932378470425746444631963933610367607515800649608436183004088441881238148504635598468243968695248287570279766119573944421327504565309861792437849662128566261080923059583840204287527201636471106753069738472306223410300379312983945939043519755909420737707495224846116170095923898104488099329762265149868062693687303917610957104520999978944379566136253252697346935036425206126213766976582551430726756840294537354912787885103742021813054656962241068550049435394355553796824094853195888610994254949530524531633088750916669188277025883371307926545593346345011181011886157628805587723572874545440223921942144548540109099572715194182349314576321627183804149379561322969725485272107142991680959335537127382716195040449341448266408777436145121388591741613272241408064729715121476227737259932422493622000014673154665474739974557976672498027364986075870354093242809763072555932073688776712239151696700128393589329790478951588551070833013708885416360627613835550721939073618725634813608997025047929327270234611128029339388251117036658410438813874667672407000490721438737857471847655487642835059784967516451098631494261100960513521722400650533821661854325599281416744189966724295645707952292786069145361070873245192529272080607536319284389065418040578100669665069777133031446812281199863684982910055858515634879595144557407925298026899908970790756383369461817536923660051327566555421265363733995050644914554395836353253513
pt = pow(ct, d, N)
flag = long_to_bytes(pt)
print(flag)
# gctf{maybe_I_should_have_used_bigger_primes}
